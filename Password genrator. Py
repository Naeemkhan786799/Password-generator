import tkinter as tk
from tkinter import messagebox
import random
import string

class PasswordGeneratorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Password Generator")
        self.root.geometry("400x300")
        self.root.resizable(False, False)

        # Title
        tk.Label(root, text="Password Generator", font=("Arial", 18, "bold")).pack(pady=10)

        # Length selection
        tk.Label(root, text="Password Length:", font=("Arial", 12)).pack()
        self.length_var = tk.IntVar(value=12)
        tk.Spinbox(root, from_=4, to=64, textvariable=self.length_var, font=("Arial", 12)).pack(pady=5)

        # Checkboxes
        self.include_upper = tk.BooleanVar(value=True)
        self.include_lower = tk.BooleanVar(value=True)
        self.include_digits = tk.BooleanVar(value=True)
        self.include_symbols = tk.BooleanVar(value=True)

        tk.Checkbutton(root, text="Include Uppercase Letters", variable=self.include_upper).pack(anchor='w', padx=30)
        tk.Checkbutton(root, text="Include Lowercase Letters", variable=self.include_lower).pack(anchor='w', padx=30)
        tk.Checkbutton(root, text="Include Numbers", variable=self.include_digits).pack(anchor='w', padx=30)
        tk.Checkbutton(root, text="Include Symbols", variable=self.include_symbols).pack(anchor='w', padx=30)

        # Generate button
        tk.Button(root, text="Generate Password", font=("Arial", 12), bg="green", fg="white",
                  command=self.generate_password).pack(pady=10)

        # Output
        self.result_entry = tk.Entry(root, font=("Arial", 14), justify="center")
        self.result_entry.pack(pady=5)

        # Copy button
        tk.Button(root, text="Copy to Clipboard", command=self.copy_password).pack()

    def generate_password(self):
        length = self.length_var.get()
        chars = ""

        if self.include_upper.get():
            chars += string.ascii_uppercase
        if self.include_lower.get():
            chars += string.ascii_lowercase
        if self.include_digits.get():
            chars += string.digits
        if self.include_symbols.get():
            chars += string.punctuation

        if not chars:
            messagebox.showwarning("Warning", "Select at least one character set.")
            return

        password = ''.join(random.choice(chars) for _ in range(length))
        self.result_entry.delete(0, tk.END)
        self.result_entry.insert(0, password)

    def copy_password(self):
        password = self.result_entry.get()
        if password:
            self.root.clipboard_clear()
            self.root.clipboard_append(password)
            messagebox.showinfo("Copied", "Password copied to clipboard.")

# Run the app
if __name__ == "__main__":
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()